/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class org_photonvision_tensorrt_TensorRTJNI */

#ifndef _Included_org_photonvision_tensorrt_TensorRTJNI
#define _Included_org_photonvision_tensorrt_TensorRTJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     org_photonvision_tensorrt_TensorRTJNI
 * Method:    create
 * Signature: (Ljava/lang/String;III)J
 */
JNIEXPORT jlong JNICALL Java_org_photonvision_tensorrt_TensorRTJNI_create
  (JNIEnv *, jclass, jstring, jint, jint, jint);

/*
 * Class:     org_photonvision_tensorrt_TensorRTJNI
 * Method:    setCoreMask
 * Signature: (JI)I
 */
JNIEXPORT jint JNICALL Java_org_photonvision_tensorrt_TensorRTJNI_setCoreMask
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     org_photonvision_tensorrt_TensorRTJNI
 * Method:    destroy
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_org_photonvision_tensorrt_TensorRTJNI_destroy
  (JNIEnv *, jclass, jlong);

/*
 * Class:     org_photonvision_tensorrt_TensorRTJNI
 * Method:    detect
 * Signature: (JJDD)[Lorg/photonvision/tensorrt/TensorRTJNI/TensorRTResult;
 */
JNIEXPORT jobjectArray JNICALL Java_org_photonvision_tensorrt_TensorRTJNI_detect
  (JNIEnv *, jclass, jlong, jlong, jdouble, jdouble);

/*
 * Class:     org_photonvision_tensorrt_TensorRTJNI
 * Method:    isQuantized
 * Signature: (J)Z
 */
JNIEXPORT jboolean JNICALL Java_org_photonvision_tensorrt_TensorRTJNI_isQuantized
  (JNIEnv *, jclass, jlong);

#ifdef __cplusplus
}
#endif
#endif
